
openapi: 3.0.3
info:
  title: Customer Service API
  version: 1.0.0
  description: API quản lý khách hàng và đăng nhập

tags:
  - name: customers
    description: Thông tin khách hàng

paths:
  /api/customers/:
    get:
      tags: [customers]
      summary: Lấy danh sách khách hàng
      parameters:
        - in: query
          name: skip
          schema:
            type: integer
            default: 0
        - in: query
          name: limit
          schema:
            type: integer
            default: 100
      responses:
        '200':
          description: Danh sách khách hàng
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'

    post:
      tags: [customers]
      summary: Tạo khách hàng mới
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerCreate'
      responses:
        '200':
          description: Tạo thành công
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        '400':
          description: Email already registered
        '500':
          $ref: '#/components/responses/ServerError'

  /api/customers/{customer_id}:
    get:
      tags: [customers]
      summary: Lấy thông tin khách hàng theo ID
      parameters:
        - in: path
          name: customer_id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Thông tin của 1 khách hàng
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        '404':
          description: Customer not found
        '500':
          $ref: '#/components/responses/ServerError'

    put:
      tags: [customers]
      summary: Cập nhật thông tin khách hàng
      parameters:
        - in: path
          name: customer_id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerUpdate'
      responses:
        '200':
          description: Cập nhật thành công
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        '404':
          description: Customer not found
        '500':
          $ref: '#/components/responses/ServerError'

    delete:
      tags: [customers]
      summary: Xóa khách hàng theo ID
      parameters:
        - in: path
          name: customer_id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Xóa thành công
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        '404':
          description: Customer not found
        '500':
          $ref: '#/components/responses/ServerError'

  /api/customers/login:
    post:
      tags: 
        - customers
      summary: Đăng nhập khách hàng và tạo JWT token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerLogin'
      responses:
        '200':
          description: Đăng nhập thành công
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Login successful
                  id:
                    type: integer
                    example: 123
                  full_name:
                    type: string
                    example: Nguyễn Văn A
                  email:
                    type: string
                    example: nguyenvana@example.com
                  phone_number:
                    type: string
                    example: '0123456789'
                  address:
                    type: string
                    example: '123 Đường ABC, Hà Nội'
                  token:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        '401':
          description: Thông tin đăng nhập không hợp lệ
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    example: Invalid credentials
        '500':
          $ref: '#/components/responses/ServerError'

components:
  schemas:
    Customer:
      type: object
      properties:
        customer_id:
          type: integer
        full_name:
          type: string
        email:
          type: string
        password:
          type: string
        phone_number:
          type: string
          nullable: true
        address:
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
          nullable: true

    CustomerCreate:
      type: object
      required: [full_name, email, password]
      properties:
        full_name:
          type: string
        email:
          type: string
        password:
          type: string
        phone_number:
          type: string
          nullable: true
        address:
          type: string
          nullable: true

    CustomerUpdate:
      type: object
      properties:
        full_name:
          type: string
        email:
          type: string
        password:
          type: string
        phone_number:
          type: string
          nullable: true
        address:
          type: string
          nullable: true

    CustomerLogin:
      type: object
      required: [email, password]
      properties:
        email:
          type: string
        password:
          type: string

  responses:
    NotFound:
      description: Not found
    ServerError:
      description: Internal server error
